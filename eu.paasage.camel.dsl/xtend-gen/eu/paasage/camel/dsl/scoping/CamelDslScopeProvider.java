/**
 * generated by Xtext
 */
package eu.paasage.camel.dsl.scoping;

import eu.paasage.camel.dsl.scoping.CamelQualifiedNameProvider;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.eclipse.xtext.xbase.lib.Extension;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
@SuppressWarnings("all")
public class CamelDslScopeProvider extends AbstractDeclarativeScopeProvider {
  @Extension
  private CamelQualifiedNameProvider _provider = new CamelQualifiedNameProvider();
  
  public IScope scope_CommunicationInstance_requiredCommunicationInstance(final /* CommunicationInstance */Object ri, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nDeploymentModel cannot be resolved to a type."
      + "\nRequiredCommunicationInstance cannot be resolved to a type."
      + "\nInternalComponentInstance cannot be resolved to a type."
      + "\nRequiredCommunicationInstance cannot be resolved to a type."
      + "\nThe method or field DeploymentPackage is undefined for the type CamelDslScopeProvider"
      + "\nLiterals cannot be resolved"
      + "\nCOMMUNICATION_INSTANCE__REQUIRED_COMMUNICATION_INSTANCE cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\ninternalComponentInstances cannot be resolved"
      + "\nrequiredCommunicationInstances cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
  
  public IScope scope_VM_vmRequirementSet(final /* VM */Object vm, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nDeploymentModel cannot be resolved to a type."
      + "\nVMRequirementSet cannot be resolved to a type."
      + "\nThe method or field DeploymentPackage is undefined for the type CamelDslScopeProvider"
      + "\nLiterals cannot be resolved"
      + "\nVM__VM_REQUIREMENT_SET cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\nvmRequirementSets cannot be resolved"
      + "\nname cannot be resolved");
  }
  
  public IScope scope_CommunicationInstance_providedCommunicationInstance(final /* CommunicationInstance */Object ri, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nDeploymentModel cannot be resolved to a type."
      + "\nProvidedCommunicationInstance cannot be resolved to a type."
      + "\nComponentInstance cannot be resolved to a type."
      + "\nProvidedCommunicationInstance cannot be resolved to a type."
      + "\neContainer cannot be resolved"
      + "\ninternalComponentInstances cannot be resolved"
      + "\nprovidedCommunicationInstances cannot be resolved"
      + "\nvmInstances cannot be resolved"
      + "\nprovidedCommunicationInstances cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
  
  public IScope scope_HostingInstance_providedHostInstance(final /* HostingInstance */Object ri, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nDeploymentModel cannot be resolved to a type."
      + "\nProvidedHostInstance cannot be resolved to a type."
      + "\nComponentInstance cannot be resolved to a type."
      + "\nProvidedHostInstance cannot be resolved to a type."
      + "\neContainer cannot be resolved"
      + "\ninternalComponentInstances cannot be resolved"
      + "\nprovidedHostInstances cannot be resolved"
      + "\nvmInstances cannot be resolved"
      + "\nprovidedHostInstances cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
  
  public IScope scope_HostingInstance_requiredHostInstance(final /* HostingInstance */Object ri, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nDeploymentModel cannot be resolved to a type."
      + "\nRequiredHostInstance cannot be resolved to a type."
      + "\nThe method requiredHostInstance is undefined for the type CamelDslScopeProvider"
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\neContainer cannot be resolved"
      + "\ninternalComponentInstances cannot be resolved"
      + "\nmap cannot be resolved"
      + "\ninternalComponentInstances cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
  
  public IScope scope_RequirementGroup_requirements(final /* RequirementGroup */Object rg, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nRequirementModel cannot be resolved to a type."
      + "\nRequirement cannot be resolved to a type."
      + "\nThe method or field RequirementPackage is undefined for the type CamelDslScopeProvider"
      + "\nLiterals cannot be resolved"
      + "\nREQUIREMENT_GROUP__REQUIREMENTS cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\nrequirements cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
  
  public IScope scope_RoleAssignment_user(final /* RoleAssignment */Object ra, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nOrganisationModel cannot be resolved to a type."
      + "\nUser cannot be resolved to a type."
      + "\nThe method or field OrganisationPackage is undefined for the type CamelDslScopeProvider"
      + "\nLiterals cannot be resolved"
      + "\nROLE_ASSIGNMENT__USER cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\nusers cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
  
  public IScope scope_RawMetricContext_sensor(final /* RawMetricContext */Object ra, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nMetricModel cannot be resolved to a type."
      + "\nSensor cannot be resolved to a type."
      + "\nThe method or field MetricPackage is undefined for the type CamelDslScopeProvider"
      + "\nLiterals cannot be resolved"
      + "\nRAW_METRIC_CONTEXT__SENSOR cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\nsensors cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
  
  public IScope scope_Measurement_executionContext(final /* Measurement */Object m, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nExecutionModel cannot be resolved to a type."
      + "\nExecutionContext cannot be resolved to a type."
      + "\nThe method or field ExecutionPackage is undefined for the type CamelDslScopeProvider"
      + "\nLiterals cannot be resolved"
      + "\nMEASUREMENT__EXECUTION_CONTEXT cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\nexecutionContexts cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
  
  public IScope scope_MetricObjectBinding_executionContext(final /* MetricObjectBinding */Object m, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nCamelModel cannot be resolved to a type."
      + "\nExecutionContext cannot be resolved to a type."
      + "\nThe method or field MetricPackage is undefined for the type CamelDslScopeProvider"
      + "\nLiterals cannot be resolved"
      + "\nMETRIC_OBJECT_BINDING__EXECUTION_CONTEXT cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\nexecutionModels cannot be resolved"
      + "\nget cannot be resolved"
      + "\nexecutionContexts cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
  
  public IScope scope_SLOAssessment_measurement(final /* SLOAssessment */Object a, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nExecutionModel cannot be resolved to a type."
      + "\nMeasurement cannot be resolved to a type."
      + "\nThe method or field ExecutionPackage is undefined for the type CamelDslScopeProvider"
      + "\nLiterals cannot be resolved"
      + "\nSLO_ASSESSMENT__MEASUREMENT cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\nmeasurements cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
  
  public IScope scope_SecurityCapability_securityControls(final /* SecurityCapability */Object a, final EReference ref) {
    throw new Error("Unresolved compilation problems:"
      + "\nSecurityModel cannot be resolved to a type."
      + "\nSecurityControl cannot be resolved to a type."
      + "\nThe method or field SecurityPackage is undefined for the type CamelDslScopeProvider"
      + "\nLiterals cannot be resolved"
      + "\nSECURITY_CAPABILITY__SECURITY_CONTROLS cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\nsecurityControls cannot be resolved"
      + "\nqualifiedName cannot be resolved");
  }
}
